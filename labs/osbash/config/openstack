# This file contains OpenStack configuration data. It is used by both
# host (osbash, Windows batch) and VM guest scripts.

# stein                (production release; cloud-archive:stein)
# stein-proposed       (pre-release testing: cloud-archive:stein-proposed)
# stein-staging        (ppa:openstack-ubuntu-testing/stein)
: ${OPENSTACK_RELEASE:=stein}

# CirrOS image URL
if [ "$(uname -m)" = "x86_64" ]; then
    arch=x86_64
else
    arch=i386
fi

#rolaya: modify this to include other images
CIRROS_URL="http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-$arch-disk.img"
unset arch

# Name used for CirrOS image in glance
CIRROS_IMG_NAME="cirros"

#------------------------------------------------------------------------------
# https://docs.openstack.org/install-guide/environment-networking.html
#------------------------------------------------------------------------------

# Networks used by OpenStack training-labs setup
NETWORK_1="mgmt 10.0.0.0"
NETWORK_2="provider 203.0.113.0"

# Static IP used temporarily by PXE booted machines before being reconfigured
# by osbash
PXE_INITIAL_NODE_IP="10.0.0.240"

#------------------------------------------------------------------------------
# https://docs.openstack.org/install-guide/launch-instance-networks-provider.html
#------------------------------------------------------------------------------

# Public network
: ${PROVIDER_NETWORK_CIDR:=203.0.113.0/24}
: ${PROVIDER_NETWORK_GATEWAY:=203.0.113.1}
# Floating IP addresses
: ${START_IP_ADDRESS:=203.0.113.101}
: ${END_IP_ADDRESS:=203.0.113.200}

#------------------------------------------------------------------------------
# https://docs.openstack.org/install-guide/launch-instance-selfservice.html
#------------------------------------------------------------------------------

# Private demo network
: ${SELFSERVICE_NETWORK_CIDR:=172.16.1.0/24}
: ${SELFSERVICE_NETWORK_GATEWAY:=172.16.1.1}

# DNS name server used by instance VMs.
# Default is Google Public DNS (8.8.4.4).
: ${DNS_RESOLVER:=8.8.4.4}

# Set to true to use openvswitch as ML2 agent
USE_OVS_AS_ML2_AGENT=true

if [ $USE_OVS_AS_ML2_AGENT = true ]; then
    ML2_AGENT="openvswitch"
    ML2_AGENT_DESC="Open vSwitch"
    ML2_AGENT_CONF_FILE="openvswitch_agent.ini"
    ML2_MECHANISM_DRIVER="openvswitch"
    VIRT_IFACE_DRIVER="openvswitch"
fi

# Modular Layer 2 (ML2) networking related.
# ML2 agent: Default to linuxbridge.
: ${ML2_AGENT:="linuxbridge"}
: ${ML2_AGENT_DESC:="Linux Bridge"}
: ${ML2_AGENT_CONF_FILE:="linuxbridge_agent.ini"}
: ${ML2_MECHANISM_DRIVER:="linuxbridge"}

# Virtual interface driver (used to manage interface)
: ${VIRT_IFACE_DRIVER:="linuxbridge"}

: ${REGION:=RegionOne}

# vim: set ai ts=4 sw=4 et ft=sh:
